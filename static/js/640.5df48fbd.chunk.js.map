{"version":3,"file":"static/js/640.5df48fbd.chunk.js","mappings":"4OAEaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGxB,OACI,kBAAMA,SAAUA,EAAhB,WACI,kBACIC,YAAY,0BACZC,KAAK,YAET,mBAAQC,KAAK,SAAb,sBAIX,E,kBCXYC,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChC,OACE,wBACGD,EAAME,KAAI,SAAAC,GAAI,aACb,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAK,iBAAD,OAAmBN,IAAWO,MAAO,CAACC,MAAO,WAAlF,mBACGN,EAAKO,aADR,QACiBP,EAAKN,QAFfM,EAAKE,GADD,KASpB,ECoBD,EA9Be,WAEb,OAAoCM,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACHF,GAGL,mCAAC,qGACmBG,EAAAA,EAAAA,IAAUH,GAD7B,OACOI,EADP,OAECR,EAAcQ,EAAIC,KAAKC,SAFxB,2CAAD,sDAID,GAAE,CAACN,IASJ,OACE,iCACE,SAACvB,EAAD,CAAWC,SATM,SAAC6B,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASC,OAAOH,MACvCV,EAAgB,CAAEf,MAAOyB,IACzBF,EAAEG,OAAOG,OACV,IAKIlB,EAAWmB,OAAS,GAAI,SAAChC,EAAD,CAAUC,MAAOY,EAAYX,MAAOgB,IAAkB,OAEpF,C","sources":["components/SearchBar/SearchBar.jsx","components/FilmList/FilmList.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => {\n\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                placeholder=\"Enter your search query\"\n                name=\"search\"       \n            />\n            <button type=\"submit\">Submit</button>\n        </form>\n\n    )\n};\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n}","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nexport const FilmList = ({ films, query }) => {\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id} >\n          <Link to={`${film.id}`} state={{ from: `/movies?query=${query}` }} style={{color: '#000000'}}>\n            {film.title ?? film.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    },\n  )),\n  query: PropTypes.string.isRequired,\n};","import { useSearchParams } from \"react-router-dom\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { useState, useEffect } from \"react\";\nimport { findeFilm } from '../../../services/api'\nimport { FilmList } from '../../FilmList/FilmList'\n\nconst Movies = () => {\n\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    (async function getFilmsBySearch() {\n      const res = await findeFilm(searchQuery);\n      setSearchFilm(res.data.results);\n    })();\n  }, [searchQuery]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const value = e.target.elements.search.value;\n    setSearchParams({ query: value });\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {searchFilm.length > 0 ? <FilmList films={searchFilm} query={searchQuery} /> : null}\n    </>);\n};\n\nexport default Movies;"],"names":["SearchBar","onSubmit","placeholder","name","type","FilmList","films","query","map","film","to","id","state","from","style","color","title","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","findeFilm","res","data","results","e","preventDefault","value","target","elements","search","reset","length"],"sourceRoot":""}